plugins {
    id 'dev.architectury.loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

group = project.maven_group
version = project.mod_version

base {
    archivesName = project.archives_name
}

loom {
    silentMojangMappingsLicense()

    forge {
        mixinConfig 'deep_space.mixins.json'
    }
}

repositories {

    maven {
        url 'https://api.modrinth.com/maven'
        content { includeGroup 'maven.modrinth' }
    }
    maven {
        url 'https://www.cursemaven.com'
        content { includeGroup "curse.maven" }
    }

    maven {
        url 'https://maven.tterrag.com/'
        content {
            includeGroup 'com.jozufozu.flywheel'
            includeGroup 'com.tterrag.registrate'
            includeGroup 'com.simibubi.create'
        }
    }

    maven {
        name = "squiddev"
        url = "https://squiddev.cc/maven/"
    }

    maven {
        name = "Sinytra"
        url = "https://maven.su5ed.dev/releases"
    }

    maven { url 'https://modmaven.dev/' }
    mavenCentral()
}

dependencies {
    minecraft "net.minecraft:minecraft:$project.minecraft_version"
    mappings loom.officialMojangMappings()
    forge "net.minecraftforge:forge:$project.forge_version"

    //JEI
    modImplementation("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modImplementation("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    modImplementation("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")

    //Create
    modImplementation("com.simibubi.create:create-${minecraft_version}:${create_version}:slim")
    modImplementation("com.jozufozu.flywheel:flywheel-forge-${minecraft_version}:${flywheel_version}")
    modImplementation("com.tterrag.registrate:Registrate:${registrate_version}")


    //CC
    compileOnly("cc.tweaked:cc-tweaked-${minecraft_version}-core-api:${cc_tweaked_version}")
    compileOnly modImplementation("cc.tweaked:cc-tweaked-${minecraft_version}-forge-api:${cc_tweaked_version}")
    runtimeOnly modImplementation("cc.tweaked:cc-tweaked-${minecraft_version}-forge:${cc_tweaked_version}")

    //Cosmos
    compileOnly modImplementation("maven.modrinth:cosmic-horizons-cosmos:0.0.7.2")

    modImplementation("dev.su5ed.sinytra.fabric-api:fabric-api:${forge_fabric_api_version}")

}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

// Configure Maven publishing.
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
